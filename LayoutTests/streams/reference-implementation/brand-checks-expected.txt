
PASS Can get the ReadableStreamReader constructor indirectly 
PASS Can get the ReadableStreamController constructor indirectly 
PASS ReadableStreamReader enforces a brand check on its argument 
FAIL ReadableStreamReader.prototype.closed enforces a brand check undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, getterName).get')
FAIL ReadableStreamReader.prototype.cancel enforces a brand check Can only call ReadableStreamReader.cancel on instances of ReadableStreamReader
FAIL ReadableStreamReader.prototype.read enforces a brand check Can only call ReadableStreamReader.read on instances of ReadableStreamReader
PASS ReadableStreamReader.prototype.releaseLock enforces a brand check 
FAIL ReadableStreamController enforces a brand check on its argument assert_throws: Constructing a ReadableStreamController should throw function "function () { new ReadableStreamController(fakeReadableSt..." did not throw
FAIL ReadableStreamController can't be given a fully-constructed ReadableStream assert_throws: Constructing a ReadableStreamController should throw function "function () { new ReadableStreamController(realReadableSt..." did not throw
PASS ReadableStreamController.prototype.close enforces a brand check 
PASS ReadableStreamController.prototype.enqueue enforces a brand check 
PASS ReadableStreamController.prototype.error enforces a brand check 
PASS ByteLengthQueuingStrategy.prototype.shouldApplyBackpressure enforces a brand check 
PASS ByteLengthQueuingStrategy.prototype.size should work generically on its this and its arguments 
PASS CountQueuingStrategy.prototype.shouldApplyBackpressure enforces a brand check 
PASS CountQueuingStrategy.prototype.size should work generically on its this and its arguments 

